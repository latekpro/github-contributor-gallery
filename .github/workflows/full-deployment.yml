name: Full Deployment

on:
  workflow_dispatch:
    inputs:
      environment:
        description: 'Environment to deploy to'
        required: true
        default: 'dev'
        type: choice
        options:
          - dev
          - test
          - prod

env:
  NODE_VERSION: '18.x'
  AZURE_RESOURCE_GROUP_NAME: rg-github-contributor-gallery-${{ github.event.inputs.environment }}

jobs:
  deploy-infrastructure:
    name: Deploy Azure Infrastructure
    runs-on: ubuntu-latest
    outputs:
      frontend_app_name: ${{ steps.get_outputs.outputs.frontend_app_name }}
      backend_app_name: ${{ steps.get_outputs.outputs.backend_app_name }}
      frontend_url: ${{ steps.get_outputs.outputs.frontend_url }}
      backend_url: ${{ steps.get_outputs.outputs.backend_url }}
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
      
      - name: Azure login
        uses: azure/login@v1
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}
      
      - name: Set Azure CLI defaults
        run: |
          az config set defaults.location=${{ secrets.AZURE_LOCATION }}
          
      - name: Deploy infrastructure
        run: bash ./infra/deploy.sh
        env:
          AZURE_RESOURCE_GROUP_NAME: ${{ env.AZURE_RESOURCE_GROUP_NAME }}
          AZURE_LOCATION: ${{ secrets.AZURE_LOCATION }}
          ENVIRONMENT_NAME: ${{ github.event.inputs.environment }}
      
      - name: Get deployment outputs
        id: get_outputs
        run: |
          echo "frontend_app_name=${{ env.FRONTEND_APP_NAME }}" >> $GITHUB_OUTPUT
          echo "backend_app_name=${{ env.BACKEND_APP_NAME }}" >> $GITHUB_OUTPUT
          echo "frontend_url=${{ env.FRONTEND_URL }}" >> $GITHUB_OUTPUT
          echo "backend_url=${{ env.BACKEND_URL }}" >> $GITHUB_OUTPUT
      
  deploy-backend:
    name: Build & Deploy Backend
    needs: deploy-infrastructure
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
      
      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'
          cache-dependency-path: backend/package-lock.json
      
      - name: Install dependencies
        run: |
          cd backend
          npm ci
      
      - name: Azure login
        uses: azure/login@v1
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}
      
      - name: Build and deploy backend
        uses: azure/webapps-deploy@v2
        with:
          app-name: ${{ needs.deploy-infrastructure.outputs.backend_app_name }}
          package: ./backend
      
      - name: Configure app settings
        if: ${{ secrets.GITHUB_TOKEN != '' }}
        run: |
          az webapp config appsettings set \
            --resource-group ${{ env.AZURE_RESOURCE_GROUP_NAME }} \
            --name ${{ needs.deploy-infrastructure.outputs.backend_app_name }} \
            --settings GITHUB_TOKEN="${{ secrets.GITHUB_TOKEN }}" \
            --output none
      
      - name: Log deployment URL
        run: |
          echo "Backend deployed to: ${{ needs.deploy-infrastructure.outputs.backend_url }}"
  
  deploy-frontend:
    name: Build & Deploy Frontend
    needs: [deploy-infrastructure, deploy-backend]
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
      
      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'
          cache-dependency-path: frontend/package-lock.json
      
      - name: Install dependencies
        run: |
          cd frontend
          npm ci
      
      - name: Azure login
        uses: azure/login@v1
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}
      
      - name: Build frontend
        run: |
          cd frontend
          echo "VITE_API_URL=${{ needs.deploy-infrastructure.outputs.backend_url }}/api" > .env
          npm run build
      
      - name: Deploy frontend
        uses: azure/webapps-deploy@v2
        with:
          app-name: ${{ needs.deploy-infrastructure.outputs.frontend_app_name }}
          package: ./frontend/dist
      
      - name: Log deployment URLs
        run: |
          echo "Frontend deployed to: ${{ needs.deploy-infrastructure.outputs.frontend_url }}"
          echo "Backend API endpoint: ${{ needs.deploy-infrastructure.outputs.backend_url }}/api"
  
  verify-deployment:
    name: Verify Deployment
    needs: [deploy-infrastructure, deploy-backend, deploy-frontend]
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
      
      - name: Azure login
        uses: azure/login@v1
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}
      
      - name: Verify deployment
        run: |
          frontend_url="${{ needs.deploy-infrastructure.outputs.frontend_url }}"
          backend_url="${{ needs.deploy-infrastructure.outputs.backend_url }}"
          
          # Check backend health
          echo "Checking backend health..."
          health_status=$(curl -s -o /dev/null -w "%{http_code}" "$backend_url/api/health" || echo "failed")
          
          if [ "$health_status" == "200" ]; then
            echo "✓ Backend health check successful"
          else
            echo "✗ Backend health check failed: $health_status"
          fi
          
          # Check frontend accessibility
          echo "Checking frontend..."
          frontend_status=$(curl -s -o /dev/null -w "%{http_code}" "$frontend_url" || echo "failed")
          
          if [ "$frontend_status" == "200" ]; then
            echo "✓ Frontend is accessible"
          else
            echo "✗ Frontend check failed: $frontend_status"
          fi
          
          echo "Deployment verification completed"
          echo "Application URLs:"
          echo "  Frontend: $frontend_url"
          echo "  Backend API: $backend_url/api"
